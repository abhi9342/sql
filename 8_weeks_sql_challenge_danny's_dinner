8 Weeks SQL Challenge - Danny's Dinner
------------------------------------------------------------------------------------------------------------------------------
1. What is the total amount each customer spent at the restaurant?
select m2.customer_id, sum(price) as "Total sales"
from menu as m1 join sales as m2 on m1.product_id = m2.product_id
group by customer_id order by customer_id asc;
------------------------------------------------------------------------------------------------------------------------------
2. How many days has each customer visited the restaurant?(Mistake need to use distinct)
select customer_id, count(order_date) as "No of days visited"
from sales
group by customer_id
order by customer_id; 
------------------------------------------------------------------------------------------------------------------------------
3. What was the first item from the menu purchased by each customer?

with item_rank_check (customer_id, order_date, product_name) as
		(select customer_id, order_date, m.product_name,
		dense_rank() over(partition by customer_id order by order_date) as item_order_rank
		from menu m join sales s 
		on m.product_id = s.product_id)
select customer_id, product_name
from item_rank_check
where item_order_rank = 1
group by customer_id, product_name;
------------------------------------------------------------------------------------------------------------------------------
4. What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT  m.product_name, count(s.customer_id) 
from sales s join menu m on s.product_id = m.product_id
group by m.product_name
limit 1;
------------------------------------------------------------------------------------------------------------------------------
5. Which item was the most popular for each customer?

with fav_item (customer_id, product_name, no_of_times) as
		(select customer_id, product_name, count(m.product_id) as no_of_times,
		dense_rank() over(partition by customer_id order by count(customer_id) desc) as rank
		from sales s, menu m
		where s.product_id = m.product_id
		group by customer_id, product_name
		order by customer_id)
select customer_id, product_name, no_of_times
from fav_item
where rank =1
group by customer_id, product_name, no_of_times
order by customer_id;
-----------------------------------------------------------------------------------------------------------------------------
6. Which item was purchased first by the customer after they became a member?
with first_purchase as (
		select s.customer_id, s.product_id,
		dense_rank() over(partition by s.customer_id order by s.order_date) as rank
		from sales s
		join members m
		on s.customer_id = m.customer_id
		where s.order_date >= m.join_date)
		
select fp.customer_id, fp.product_id
from first_purchase fp
join menu m
on m.product_id = fp.product_id
where fp.rank = 1;
-----------------------------------------------------------------------------------------------------------------------------
8. What is the total items and amount spent for each member before they became a member?
First, filter order_date before their join_date. Then, COUNT unique product_id and SUM the prices total spent before becoming member.

select s.customer_id, count(s.product_id), sum(m.price)
from sales s
join menu m
on s.product_id = m.product_id
join members mb
on s.customer_id = mb.customer_id
where s.order_date < mb.join_date
group by s.customer_id;

-----------------------------------------------------------------------------------------------------------------------------
9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier — how many points would each customer have?

with price as (
select *,
	CASE
	When product_id = 1 Then 20 * price
	else 10 * price
	END as points
	from menu
)

select s.customer_id, count(s.product_id), sum(points)
from sales s
join price p
on s.product_id = p.product_id
group by customer_id;
-----------------------------------------------------------------------------------------------------------------------------
10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi — how many points do customer A and B have at the end of January?

with points as (
select s.customer_id, join_date, order_date, product_name, price,
case
when order_date >= mb.join_date and order_date < (mb.join_date + INTERVAL '6 day') Then price * 20
when product_name = 'curry' Then price*10
when product_name = 'sushi' Then price*20
else price * 10
end as total_points from members mb
join sales s
on s.customer_id = mb.customer_id
join menu m
on s.product_id = m.product_id)

select customer_id, sum(total_points)
from points
where order_date <= '2021-01-31'
group by customer_id;